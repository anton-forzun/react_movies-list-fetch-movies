{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovie","title","fetch","then","response","json","FindMovie","addToTheList","useState","setTitle","setMovie","error","setError","sendRequest","a","movieFromServer","current","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","App","state","some","film","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"sVAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+BCbRC,EAAW,SAACC,GACvB,OAAOC,MAAM,GAAD,OAHF,+CAGE,OAAUD,IACnBE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCOlBC,G,MAA6B,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3C,EAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA0BD,mBAAS,MAAnC,mBAAOnB,EAAP,KAAcqB,EAAd,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAW,uCAAG,4BAAAC,EAAA,sEACYd,EAASC,GADrB,YACZc,EADY,QAGErB,MAHF,yCAITgB,EAASK,IAJA,gCAOXH,GAAS,SAAAI,GAAO,OAAKA,MAPV,2CAAH,qDAUjB,OACE,qCACE,uBAAM1B,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,wBACEA,UAAU,QACV2B,QAAQ,cAFV,wBAKE,qBAAK3B,UAAU,UAAf,SACE,uBACE4B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ9B,UAAU,kBACV+B,MAAOpB,EACPqB,SAAU,SAACC,GACTX,GAAS,GACTH,EAASc,EAAMC,OAAOH,eAM7BV,GACC,mBAAGrB,UAAU,iBAAb,qDAKJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,kBACVmC,QAASZ,EAHX,4BASF,qBAAKvB,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL5B,UAAU,oBACVmC,QAAS,WACHpC,IACFkB,EAAalB,GACboB,EAAS,MANf,qCAeN,sBAAKnB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GACC,cAAC,EAAD,CACEA,MAAOA,YC9ENqC,EAAb,4MACEC,MAAe,CACb9B,OAAQ,IAFZ,EAKEU,aAAe,SAAClB,GACT,EAAKsC,MAAM9B,OAAO+B,MAAK,SAAAC,GAAI,OAAIxC,EAAMU,SAAW8B,EAAK9B,WACxD,EAAK+B,UAAS,SAACH,GAAD,MAAY,CACxB9B,OAAO,GAAD,mBAAM8B,EAAM9B,QAAZ,CAAoBR,SARlC,4CAaE,WACE,IAAQQ,EAAWkC,KAAKJ,MAAhB9B,OAER,OACE,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWiB,aAAcwB,KAAKxB,wBAtBxC,GAAyByB,aCLzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e688e691.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const url = 'https://www.omdbapi.com/?apikey=e63cfb8c&t=';\n\nexport const getMovie = (title: string) => {\n  return fetch(`${url}${title}`)\n    .then(response => response.json());\n};\n","import React, { useState } from 'react';\n\nimport { getMovie } from '../../api/api';\nimport { MovieCard } from '../MovieCard';\n\nimport './FindMovie.scss';\n\ntype Props = {\n  addToTheList: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addToTheList }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n\n  const sendRequest = async () => {\n    const movieFromServer = await getMovie(title);\n\n    if (movieFromServer.Title) {\n      return setMovie(movieFromServer);\n    }\n\n    return setError(current => !current);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label\n            className=\"label\"\n            htmlFor=\"movie-title\"\n          >\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className=\"input is-danger\"\n                value={title}\n                onChange={(event) => {\n                  setError(false);\n                  setTitle(event.target.value);\n                }}\n              />\n            </div>\n          </label>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={sendRequest}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (movie) {\n                  addToTheList(movie);\n                  setTitle('');\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard\n            movie={movie}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  addToTheList = (movie: Movie) => {\n    if (!this.state.movies.some(film => movie.imdbID === film.imdbID)) {\n      this.setState((state) => ({\n        movies: [...state.movies, movie],\n      }));\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addToTheList={this.addToTheList} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}